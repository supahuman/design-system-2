{"version":3,"sources":["../components/atoms/Button/Button.module.css","../components/atoms/Button/Button.tsx","../components/atoms/Input/Input.module.css","../components/atoms/Input/Input.tsx"],"names":["Button_default","jsx","Input_default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,cAAA,GAAA,EAAA;AC2BA,IAAM,SAAS,CAAC,EAAE,UAAU,OAAA,GAAU,SAAA,EAAW,SAAQ,qBACvD,GAAA;AAAA,EAAC,QAAA;AAAA,EAAA;AAAA,IACC,SAAA,EAAW,eAAO,OAAO,CAAA;AAAA,IACzB,OAAA;AAAA,IACA,IAAA,EAAK,QAAA;AAAA,IACL,cAAA,EAAc,KAAA;AAAA,IAEb;AAAA;AACH,CAAA;AAEF,IAAOA,eAAAA,GAAQ;;;ACrCf,IAAA,aAAA,GAAA,EAAA;AC2BA,IAAM,KAAA,GAAQ,CAAC,EAAA,KAKG;AALH,EAAA,IAAA,EAAA,GAAA,EAAA,EACb;AAAA,IAAA,KAAA;AAAA,IACA,EAAA;AAAA,IACA,YAAA,EAAc;AAAA,GA9BhB,GA2Be,EAAA,EAIV,KAAA,GAAA,SAAA,CAJU,EAAA,EAIV;AAAA,IAHH,OAAA;AAAA,IACA,IAAA;AAAA,IACA;AAAA,GAAA,CAAA;AAGA,EAAA,MAAM,OAAA,GAAU,EAAA,KAAM,KAAA,IAAA,IAAA,GAAA,MAAA,GAAA,KAAA,CAAO,WAAA,EAAA,CAAc,QAAQ,MAAA,EAAQ,GAAA,CAAA,CAAA;AAE3D,EAAA,4BACG,KAAA,EAAA,EACE,QAAA,EAAA;AAAA,IAAA,KAAA,oBAASC,GAAAA,CAAC,OAAA,EAAA,EAAM,OAAA,EAAS,SAAU,QAAA,EAAA,KAAA,EAAM,CAAA;AAAA,oBAC1CA,GAAAA;AAAA,MAAC,OAAA;AAAA,MAAA,cAAA,CAAA;AAAA,QACC,EAAA,EAAI,OAAA;AAAA,QACJ,WAAW,aAAA,CAAO,KAAA;AAAA,QAClB,YAAA,EAAY,aAAa,KAAA,IAAS;AAAA,OAAA,EAC9B,KAAA;AAAA;AACN,GAAA,EACF,CAAA;AAEJ,CAAA;AAEA,IAAOC,cAAAA,GAAQ","file":"index.js","sourcesContent":[".primary {\r\n  background: var(--colors-primary);\r\n  color: var(--colors-background);\r\n  border: none;\r\n  padding: var(--spacing-md) var(--spacing-lg);\r\n  border-radius: 4px;\r\n  font-family: var(--typography-fontFamily);\r\n  font-size: var(--typography-fontSize-md);\r\n  font-weight: var(--typography-fontWeight-bold);\r\n  cursor: pointer;\r\n}\r\n\r\n.secondary {\r\n  background: var(--colors-secondary);\r\n  color: var(--colors-background);\r\n  border: none;\r\n  padding: var(--spacing-md) var(--spacing-lg);\r\n  border-radius: 4px;\r\n  font-family: var(--typography-fontFamily);\r\n  font-size: var(--typography-fontSize-md);\r\n  font-weight: var(--typography-fontWeight-regular);\r\n  cursor: pointer;\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Button.module.css\";\r\n\r\n/**\r\n * Button props interface\r\n * @interface ButtonProps\r\n */\r\nexport interface ButtonProps {\r\n  /** The content to be displayed within the button */\r\n  children: React.ReactNode;\r\n  /** The visual style variant of the button */\r\n  variant?: \"primary\" | \"secondary\";\r\n  /** Handler called when the button is clicked */\r\n  onClick?: () => void;\r\n}\r\n\r\n/**\r\n * Button component - A versatile button component that supports different variants\r\n *\r\n * @component\r\n * @example\r\n * ```tsx\r\n * <Button variant=\"primary\" onClick={() => console.log('clicked')}>\r\n *   Click Me\r\n * </Button>\r\n * ```\r\n */\r\nconst Button = ({ children, variant = \"primary\", onClick }: ButtonProps) => (\r\n  <button\r\n    className={styles[variant]}\r\n    onClick={onClick}\r\n    role=\"button\"\r\n    aria-pressed={false}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\nexport default Button;\r\n",".input {\r\n  font-family: var(--typography-fontFamily);\r\n  font-size: var(--typography-fontSize-md);\r\n  padding: var(--spacing-sm) var(--spacing-md);\r\n  border: 1px solid var(--colors-secondary);\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  transition: border-color 0.2s ease-in-out;\r\n}\r\n\r\n.input:focus {\r\n  outline: none;\r\n  border-color: var(--colors-primary);\r\n  box-shadow: 0 0 0 2px rgba(0, 112, 243, 0.2);\r\n}\r\n\r\n.input::placeholder {\r\n  color: #999;\r\n}\r\n\r\n.input:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Input.module.css\";\r\n\r\n/**\r\n * Input props interface extending standard HTML input attributes\r\n * @interface InputProps\r\n */\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {\r\n  /** Optional label for the input */\r\n  label?: string;\r\n}\r\n\r\n/**\r\n * Input component - A form input with optional label\r\n *\r\n * @component\r\n * @example\r\n * ```tsx\r\n * <Input\r\n *   label=\"Email Address\"\r\n *   type=\"email\"\r\n *   placeholder=\"Enter your email\"\r\n *   onChange={(e) => handleChange(e.target.value)}\r\n * />\r\n * ```\r\n */\r\nconst Input = ({\r\n  label,\r\n  id,\r\n  \"aria-label\": ariaLabel,\r\n  ...props\r\n}: InputProps) => {\r\n  const inputId = id || label?.toLowerCase().replace(/\\s+/g, \"-\");\r\n\r\n  return (\r\n    <div>\r\n      {label && <label htmlFor={inputId}>{label}</label>}\r\n      <input\r\n        id={inputId}\r\n        className={styles.input}\r\n        aria-label={ariaLabel || label || \"Input field\"}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]}